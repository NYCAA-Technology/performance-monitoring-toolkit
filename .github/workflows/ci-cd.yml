name: Performance Monitoring Demo CI/CD

on:
  push:
    branches: 
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  # Lint and Code Quality Check
  lint-and-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Run ESLint
        run: npm run lint
      
      - name: Check Code Formatting
        run: npm run format:check

  # Unit and Performance Testing
  test:
    needs: lint-and-quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://registry.npmjs.org'
      
      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Run Unit Tests
        run: npm test
      
      - name: Run Performance Tests
        run: npm run test:performance
      
      - name: Generate Coverage Report
        run: npm run test:coverage
      
      - name: Upload Coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage/coverage-final.json

  # NPM Package Publication
  publish:
    needs: [lint-and-quality, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
      
      - name: Install Dependencies
        run: npm ci
      
      - name: Build Package
        run: npm run build
      
      - name: Publish to NPM (Main Branch)
        if: github.ref == 'refs/heads/main'
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Publish to NPM (Develop Branch)
        if: github.ref == 'refs/heads/develop'
        run: npm publish --tag next --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Performance Monitoring and Reporting
  performance-monitoring:
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Performance Profiling
        run: npm run profile
      
      - name: Generate Performance Report
        run: npm run generate-performance-report
      
      - name: Archive Performance Report
        uses: actions/upload-artifact@v3
        with:
          name: performance-report
          path: performance-report.json

# Notification Configuration
notifications:
  webhooks:
    - url: ${{ secrets.SLACK_WEBHOOK }}
      on_success: change
      on_failure: always
      on_pull_requests: false
